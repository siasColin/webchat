<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kingim.dao.GroupMapper" >
  <resultMap id="BaseResultMap" type="kingim.model.Group" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_num" property="groupNum" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="build_time" property="buildTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="usercount" property="usercount" jdbcType="INTEGER" />
  </resultMap>

  <select id="getByUserId" resultMap="BaseResultMap">
      SELECT
        tg.id,
        tg.group_num,
        tg.group_name,
        tg.avatar,
        tg.user_id,
        tg.build_time,
        tg.description,
        tg.`status`
      FROM
          t_group tg,
                  group_user gu

      WHERE
          tg.id = gu.group_id
      AND gu.user_id = #{userId}
  </select>
  
  <select id="findGroupByUserId" resultMap="BaseResultMap">
      SELECT
        tg.id,
        tg.group_num,
        tg.group_name,
        tg.avatar,
        tg.user_id,
        tg.build_time,
        tg.description,
        tg.`status`,
        (select count(1)  from group_user where group_id = tg.id) as usercount 
      FROM
          t_group tg

      WHERE
          tg.user_id = #{userId}
  </select>
  
  
  <select id="findGroupById" resultMap="BaseResultMap">
      SELECT
        tg.id,
        tg.group_num,
        tg.group_name,
        tg.avatar,
        tg.user_id,
        tg.build_time,
        tg.description,
        tg.`status`
       
      FROM
          t_group tg

      WHERE
          tg.id = #{groupId}
  </select>
  
  <insert id="addGroup" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO t_group (
           group_num, group_name,
           <if test="avatar != null and avatar != ''">avatar,</if>
           user_id,build_time
           <if test="description != null and description != ''">,description </if>
           )
        VALUES
            ( #{groupNum},#{groupName},
            <if test="avatar != null and avatar != ''">#{avatar},</if>
             #{userId}, NOW()
             <if test="description != null and description != ''">,#{description} </if>
             )
    </insert>
    
    <update id="updateGroup" parameterType="java.util.Map">
          update t_group set group_name=#{groupName},group_num=#{groupNum},description=#{description},avatar=#{avatar} where id = #{id}
    </update>
    
    <delete id="delGroup">
          delete from t_group where id = #{id}
    </delete>
</mapper>